<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Border}" x:Key="DefaultColorChanger">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D8FFFFFF"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="#B2FFFFFF"></Setter>
    </Style>

    <Style x:Key="RightPathButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource DefaultColorChanger}">
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AutorizationButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3">
                        <Label Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"
                               FontSize="{TemplateBinding FontSize}"/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource DefaultColorChanger}">
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AutorizationTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="3" x:Name="BorderText">
                        <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" x:Name="InvisibleTextBox"
                                     BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                            <Border.Style>
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource DefaultColorChanger}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=InvisibleTextBox, Path=IsFocused}" Value="True">
                                        <Setter Property="Background" Value="#D8FFFFFF"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AutorizationPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Background" Value="#B2FFFFFF"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}" >
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"
                                      BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D8FFFFFF"></Setter>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin"  Value="True">
                <Setter Property="Background" Value="#D8FFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>